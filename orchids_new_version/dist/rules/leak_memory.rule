/*
*   Memory leak vulnerability in ip_options_get
*   Systems affected: linux kernel 2.6 <= 2.6.9, 2.4 <= 2.4.28 on i386 (at least)
*   http://www.guninski.com/where_do_you_want_billg_to_go_today_2.html
*/

#include "linux32syscall.h"
#include "linuxsocket.h"

#define MAX_CALLS 5

/*** Needed configuration:
 *** auditctl should audit all the syscalls in this file, and this will be
 *** handled automatically by the following line:
 *** [local:auditctl]
 ***/

rule leak_memory
{
  state init
  {
    expect (.auditd.syscall == SYS_socketcall &&
	    .auditd.a0 == SYS_CONNECT)
      goto start;
  }

  state start!
  {
   $counter = 1 ;
   $attack_pid = .auditd.pid;

   expect (.auditd.pid == $attack_pid &&
       .auditd.syscall == SYS_socketcall &&
       .auditd.a0 == SYS_CONNECT)
       goto listen_loop;
  }

  state listen_loop!
  {
    $counter = $counter + 1;
    expect ($counter == MAX_CALLS)
       goto alert;

    expect ( .auditd.pid == $attack_pid &&
         .auditd.syscall == SYS_socketcall &&
         .auditd.a0 == SYS_CONNECT &&
         $counter < MAX_CALLS)
       goto listen_loop;
  }


  state alert!
  {
    print_string ("Memory leak DOS attack detected !!\n");

    $reaction = "kill -9 " + str_from_int( $attack_pid ) ;
    system( $reaction );
    print_string (" --> Orchids is reacting : killing attack process !!\n");
    print_string ( $reaction );
    print_string ("\n");

    report();
  }

}/* end rule leak_memory*/
