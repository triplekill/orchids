/*
*/

#define MAX_ATTEMPT 3

#define FIREWALL "raisin"
#define RCMD(dest, cmd) "ssh root@" dest " '" + (cmd) + "'"
#define IPTABLES "/sbin/iptables"
#define BLACKLISTTABLE "blacklist"

#define BLOCKIP_CMD(ip) \
  IPTABLES " --append " BLACKLISTTABLE \
    " --proto TCP --source " + (ip)

rule anti_ssh_scan synchronize($attacker) {

  state init {
    expect (.sshd.action == "Failed")
      goto start;
  }

  state start {
    $attempts = 1;
    $start_time = .udp.time;
    $attacker = .sshd.src_ip;
    goto failed_loop;
  }

  state update_counter {
    $attempts = $attempts + 1;
    if ($attempts >= MAX_ATTEMPT)
      {
        $cmd = RCMD( FIREWALL, BLOCKIP_CMD( str_from_ipv4( $attacker ) ) );
        report();
        kill_threads();
      }
    goto failed_loop;
  }

  state failed_loop {
  /*!!! should really cut() here */
   /* Capture other network activities of the suspected attacker. */
   expect (.netfilter.src == $attacker
        && .nfhub.desc != "ssh"
        && .nfhub.desc != "ssh*")
     goto failed_loop;

   /* Log successful logging of the attacker. */
   expect (.sshd.src_ip == $attacker
        && .sshd.action == "Accepted")
     goto failed_loop;

   /* Count the number of failed attempts. */
   expect (.sshd.action == "Failed"
        && $attacker == .sshd.src_ip)
     goto update_counter;
  }
}
