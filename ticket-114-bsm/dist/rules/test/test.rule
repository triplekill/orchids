/*
** [TEST]
*/

rule demoRule
{
  state init
  {
    // Test 0 Types
    $a = 123;
    $b = "hello.world";
    $c = _CTIME( 1234567890 );
    $d = _CTIME( "Sat Feb 14 00:31:30 2009" );
    $e = _IPV4( "www.lsv.ens-cachan.fr" );
    $f = _TIMEVAL( 1234567890, 1234567890 );
    $g = _TIMEVAL( "Sat Feb 14 00:31:30 2009", 1234567890 );
    $h = _COUNTER( 12345 );
    $i = _REGEX( "^abc(de|fgh)*klm$" );


    // Test 1 Const print
    print(1);
    print("OK");

    // Test 2 Var assignement
    $var1 = 1;
    $var2 = -1;
    $var3 = "OK";
    print($var1);
    print($var2);
    print($var3);


    // Test 3 if then else
    if ($var1)
      print("OK");
    else
      print("KO");

    // Test 4 if then else multiple actions
    if ($var1)
    {
      $msg = "OK";
      print($msg);
    }
    else
    {
      $msg = "KO";
      print($msg);
    }

    // Test 5 Logic expression assignement
    $var1 = 1;
    $var2 = (($var1 == 0) || ($var1 == 1));
    if ($var2)
      print("OK");
    else
      print("KO");

    // Test 6 Regex Split
    $string = "Hello World !";
    / $string / "([^ ]+) ([^ ]+)" / $hello / $world;
    print($string);
    print($hello);
    print($world);

    // Test 7 Regex Match
    $string = "Hello World !";
    if ($string =~ _REGEX ("Hello"))
      print("OK");
    else
      print("KO");

    // Test 8 Regex Not Match
    $string = "Hello World !";
    if ($string !~ _REGEX ("Hllo"))
      print("OK");
    else
      print("KO");

    // Test 9 Dynamic Regexp (To Complete)



    // Test 10 Test Floating Points
    $var1 = 0.123456;
    $var2 = .789123;
    $var3 = 123456.123E+12;
    $var4 = 8.123e-3;
    print ($var1);
    print ($var2);
    print ($var3);
    print ($var4);

    // Test 11 PastVal (To Complete)

    expect (defined (.udp.msg))
      goto udp;

    expect (defined (.textfile.line))
      goto txt;
  }

  state udp
  {
    print("UDP packet received");
  }

  state txt
  {
    print("TXT line read");
  }
}
